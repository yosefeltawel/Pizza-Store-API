//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.5.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using PizzaStore.Data.HelperClasses;
using PizzaStore.Data.FactoryClasses;
using PizzaStore.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace PizzaStore.Data.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'OrderPizza'.<br/><br/></summary>
	[Serializable]
	public partial class OrderPizzaEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<PizzaToppingEntity> _pizzaToppings;
		private OrderEntity _order;
		private PizzaEntity _pizza;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static OrderPizzaEntityStaticMetaData _staticMetaData = new OrderPizzaEntityStaticMetaData();
		private static OrderPizzaRelations _relationsFactory = new OrderPizzaRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Order</summary>
			public static readonly string Order = "Order";
			/// <summary>Member name Pizza</summary>
			public static readonly string Pizza = "Pizza";
			/// <summary>Member name PizzaToppings</summary>
			public static readonly string PizzaToppings = "PizzaToppings";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class OrderPizzaEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public OrderPizzaEntityStaticMetaData()
			{
				SetEntityCoreInfo("OrderPizzaEntity", InheritanceHierarchyType.None, false, (int)PizzaStore.Data.EntityType.OrderPizzaEntity, typeof(OrderPizzaEntity), typeof(OrderPizzaEntityFactory), false);
				AddNavigatorMetaData<OrderPizzaEntity, EntityCollection<PizzaToppingEntity>>("PizzaToppings", a => a._pizzaToppings, (a, b) => a._pizzaToppings = b, a => a.PizzaToppings, () => new OrderPizzaRelations().PizzaToppingEntityUsingOrderPizzaId, typeof(PizzaToppingEntity), (int)PizzaStore.Data.EntityType.PizzaToppingEntity);
				AddNavigatorMetaData<OrderPizzaEntity, OrderEntity>("Order", "OrderPizzas", (a, b) => a._order = b, a => a._order, (a, b) => a.Order = b, PizzaStore.Data.RelationClasses.StaticOrderPizzaRelations.OrderEntityUsingOrderIdStatic, ()=>new OrderPizzaRelations().OrderEntityUsingOrderId, null, new int[] { (int)OrderPizzaFieldIndex.OrderId }, null, true, (int)PizzaStore.Data.EntityType.OrderEntity);
				AddNavigatorMetaData<OrderPizzaEntity, PizzaEntity>("Pizza", "OrderPizzas", (a, b) => a._pizza = b, a => a._pizza, (a, b) => a.Pizza = b, PizzaStore.Data.RelationClasses.StaticOrderPizzaRelations.PizzaEntityUsingPizzaIdStatic, ()=>new OrderPizzaRelations().PizzaEntityUsingPizzaId, null, new int[] { (int)OrderPizzaFieldIndex.PizzaId }, null, true, (int)PizzaStore.Data.EntityType.PizzaEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static OrderPizzaEntity()
		{
		}

		/// <summary> CTor</summary>
		public OrderPizzaEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public OrderPizzaEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this OrderPizzaEntity</param>
		public OrderPizzaEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for OrderPizza which data should be fetched into this OrderPizza object</param>
		public OrderPizzaEntity(System.Int32 id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for OrderPizza which data should be fetched into this OrderPizza object</param>
		/// <param name="validator">The custom validator object for this OrderPizzaEntity</param>
		public OrderPizzaEntity(System.Int32 id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected OrderPizzaEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'PizzaTopping' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPizzaToppings() { return CreateRelationInfoForNavigator("PizzaToppings"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Order' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrder() { return CreateRelationInfoForNavigator("Order"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Pizza' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPizza() { return CreateRelationInfoForNavigator("Pizza"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this OrderPizzaEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static OrderPizzaRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PizzaTopping' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPizzaToppings { get { return _staticMetaData.GetPrefetchPathElement("PizzaToppings", CommonEntityBase.CreateEntityCollection<PizzaToppingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Order' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrder { get { return _staticMetaData.GetPrefetchPathElement("Order", CommonEntityBase.CreateEntityCollection<OrderEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Pizza' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPizza { get { return _staticMetaData.GetPrefetchPathElement("Pizza", CommonEntityBase.CreateEntityCollection<PizzaEntity>()); } }

		/// <summary>The Id property of the Entity OrderPizza<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderPizza"."Id".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 Id
		{
			get { return (System.Int32)GetValue((int)OrderPizzaFieldIndex.Id, true); }
			set { SetValue((int)OrderPizzaFieldIndex.Id, value); }		}

		/// <summary>The OrderId property of the Entity OrderPizza<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderPizza"."OrderId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 OrderId
		{
			get { return (System.Int32)GetValue((int)OrderPizzaFieldIndex.OrderId, true); }
			set	{ SetValue((int)OrderPizzaFieldIndex.OrderId, value); }
		}

		/// <summary>The PizzaId property of the Entity OrderPizza<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderPizza"."PizzaId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 PizzaId
		{
			get { return (System.Int32)GetValue((int)OrderPizzaFieldIndex.PizzaId, true); }
			set	{ SetValue((int)OrderPizzaFieldIndex.PizzaId, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'PizzaToppingEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(PizzaToppingEntity))]
		public virtual EntityCollection<PizzaToppingEntity> PizzaToppings { get { return GetOrCreateEntityCollection<PizzaToppingEntity, PizzaToppingEntityFactory>("OrderPizza", true, false, ref _pizzaToppings); } }

		/// <summary>Gets / sets related entity of type 'OrderEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual OrderEntity Order
		{
			get { return _order; }
			set { SetSingleRelatedEntityNavigator(value, "Order"); }
		}

		/// <summary>Gets / sets related entity of type 'PizzaEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual PizzaEntity Pizza
		{
			get { return _pizza; }
			set { SetSingleRelatedEntityNavigator(value, "Pizza"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace PizzaStore.Data
{
	public enum OrderPizzaFieldIndex
	{
		///<summary>Id. </summary>
		Id,
		///<summary>OrderId. </summary>
		OrderId,
		///<summary>PizzaId. </summary>
		PizzaId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace PizzaStore.Data.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: OrderPizza. </summary>
	public partial class OrderPizzaRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between OrderPizzaEntity and PizzaToppingEntity over the 1:n relation they have, using the relation between the fields: OrderPizza.Id - PizzaTopping.OrderPizzaId</summary>
		public virtual IEntityRelation PizzaToppingEntityUsingOrderPizzaId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "PizzaToppings", true, new[] { OrderPizzaFields.Id, PizzaToppingFields.OrderPizzaId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between OrderPizzaEntity and OrderEntity over the m:1 relation they have, using the relation between the fields: OrderPizza.OrderId - Order.Id</summary>
		public virtual IEntityRelation OrderEntityUsingOrderId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Order", false, new[] { OrderFields.Id, OrderPizzaFields.OrderId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between OrderPizzaEntity and PizzaEntity over the m:1 relation they have, using the relation between the fields: OrderPizza.PizzaId - Pizza.Id</summary>
		public virtual IEntityRelation PizzaEntityUsingPizzaId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Pizza", false, new[] { PizzaFields.Id, OrderPizzaFields.PizzaId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticOrderPizzaRelations
	{
		internal static readonly IEntityRelation PizzaToppingEntityUsingOrderPizzaIdStatic = new OrderPizzaRelations().PizzaToppingEntityUsingOrderPizzaId;
		internal static readonly IEntityRelation OrderEntityUsingOrderIdStatic = new OrderPizzaRelations().OrderEntityUsingOrderId;
		internal static readonly IEntityRelation PizzaEntityUsingPizzaIdStatic = new OrderPizzaRelations().PizzaEntityUsingPizzaId;

		/// <summary>CTor</summary>
		static StaticOrderPizzaRelations() { }
	}
}
